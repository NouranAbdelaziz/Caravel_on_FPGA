# 
# Synthesis run script generated by Vivado
# 

namespace eval rt {
    variable rc
}
set rt::rc [catch {
  uplevel #0 {
    set ::env(BUILTIN_SYNTH) true
    source $::env(HRT_TCL_PATH)/rtSynthPrep.tcl
    rt::HARTNDb_startJobStats
    set rt::cmdEcho 0
    rt::set_parameter writeXmsg true
    rt::set_parameter enableParallelHelperSpawn true
    set ::env(RT_TMP) "./.Xil/Vivado-26944-license-server-00/realtime/tmp"
    if { [ info exists ::env(RT_TMP) ] } {
      file mkdir $::env(RT_TMP)
    }

    rt::delete_design

    rt::set_parameter datapathDensePacking false
    set rt::partid xc7a100tcsg324-1
     file delete -force synth_hints.os

    set rt::multiChipSynthesisFlow false
    source $::env(SYNTH_COMMON)/common.tcl
    set rt::defaultWorkLibName xil_defaultlib
    rt::set_parameter defaultVhdlWorkLib xil_defaultlib

    rt::set_parameter loadVhdl2008Libs false
    rt::set_parameter loadVhdl2019Libs false
    rt::set_parameter deferParseUntilElab true
    rt::set_parameter sortHdlCommandLine true
    # Skipping read_* RTL commands because this is post-elab optimize flow
    set rt::useElabCache true
    if {$rt::useElabCache == false} {
      rt::read_verilog -sv -include /home/jeffdi/Caravel_on_FPGA/Caravel/vivado/caravel_artyA7/caravel_artyA7.gen/sources_1/ip/clk_wiz_0 /tools/Xilinx/Vivado/2023.2/data/ip/xpm/xpm_cdc/hdl/xpm_cdc.sv
      rt::read_verilog -include /home/jeffdi/Caravel_on_FPGA/Caravel/vivado/caravel_artyA7/caravel_artyA7.gen/sources_1/ip/clk_wiz_0 {
      ./.Xil/Vivado-26944-license-server-00/realtime/clk_wiz_0_stub.v
      /home/jeffdi/Caravel_on_FPGA/Caravel/src/FPGA_POR.v
      /home/jeffdi/Caravel_on_FPGA/Caravel/src/RAM128.v
      /home/jeffdi/Caravel_on_FPGA/Caravel/src/RAM256.v
      /home/jeffdi/Caravel_on_FPGA/mgmt_soc/src/VexRiscv_MinDebugCache.v
      /home/jeffdi/Caravel_on_FPGA/Caravel/src/defines.v
      /home/jeffdi/Caravel_on_FPGA/Caravel/src/__user_project_wrapper.v
      /home/jeffdi/Caravel_on_FPGA/Caravel/src/caravel_clocking.v
      /home/jeffdi/Caravel_on_FPGA/Caravel/src/user_defines.v
      /home/jeffdi/Caravel_on_FPGA/Caravel/src/caravel_core.v
      /home/jeffdi/Caravel_on_FPGA/Caravel/src/chip_io_FPGA.v
      /home/jeffdi/Caravel_on_FPGA/Caravel/src/clock_div.v
      /home/jeffdi/Caravel_on_FPGA/Caravel/src/debug_regs.v
      /home/jeffdi/Caravel_on_FPGA/Caravel/src/gpio_control_block.v
      /home/jeffdi/Caravel_on_FPGA/Caravel/src/gpio_defaults_block.v
      /home/jeffdi/Caravel_on_FPGA/Caravel/src/gpio_logic_high.v
      /home/jeffdi/Caravel_on_FPGA/Caravel/src/housekeeping.v
      /home/jeffdi/Caravel_on_FPGA/Caravel/src/housekeeping_spi.v
      /home/jeffdi/Caravel_on_FPGA/Caravel/src/io_buf.v
      /home/jeffdi/Caravel_on_FPGA/Caravel/src/mgmt_core.v
      /home/jeffdi/Caravel_on_FPGA/Caravel/src/mgmt_core_wrapper.v
      /home/jeffdi/Caravel_on_FPGA/Caravel/src/mgmt_protect.v
      /home/jeffdi/Caravel_on_FPGA/Caravel/src/mgmt_protect_hv.v
      /home/jeffdi/Caravel_on_FPGA/Caravel/src/mprj2_logic_high.v
      /home/jeffdi/Caravel_on_FPGA/Caravel/src/mprj_io_buffer.v
      /home/jeffdi/Caravel_on_FPGA/Caravel/src/mprj_logic_high.v
      /home/jeffdi/Caravel_on_FPGA/Caravel/src/user_id_programming.v
      /home/jeffdi/Caravel_on_FPGA/Caravel/src/caravel.v
    }
      rt::read_vhdl -lib xpm /tools/Xilinx/Vivado/2023.2/data/ip/xpm/xpm_VCOMP.vhd
      rt::filesetChecksum
    }
    rt::set_parameter usePostFindUniquification true
    set rt::SDCFileList ./.Xil/Vivado-26944-license-server-00/realtime/caravel_synth.xdc
    rt::sdcChecksum
    set rt::top caravel
    rt::set_parameter enableIncremental true
    rt::set_parameter markDebugPreservationLevel "enable"
    set rt::reportTiming false
    rt::set_parameter elaborateOnly false
    rt::set_parameter elaborateRtl false
    rt::set_parameter eliminateRedundantBitOperator true
    rt::set_parameter dataflowBusHighlighting false
    rt::set_parameter generateDataflowBusNetlist false
    rt::set_parameter dataFlowViewInElab false
    rt::set_parameter busViewFixBrokenConnections false
    rt::set_parameter elaborateRtlOnlyFlow false
    rt::set_parameter writeBlackboxInterface true
    rt::set_parameter ramStyle auto
    rt::set_parameter merge_flipflops true
# MODE: 
    rt::set_parameter webTalkPath {/home/jeffdi/Caravel_on_FPGA/Caravel/vivado/caravel_artyA7/caravel_artyA7.cache/wt}
    rt::set_parameter synthDebugLog false
    rt::set_parameter printModuleName false
    rt::set_parameter enableSplitFlowPath "./.Xil/Vivado-26944-license-server-00/"
    set ok_to_delete_rt_tmp true 
    if { [rt::get_parameter parallelDebug] } { 
       set ok_to_delete_rt_tmp false 
    } 
    if {$rt::useElabCache == false} {
        set oldMIITMVal [rt::get_parameter maxInputIncreaseToMerge]; rt::set_parameter maxInputIncreaseToMerge 1000
        set oldCDPCRL [rt::get_parameter createDfgPartConstrRecurLimit]; rt::set_parameter createDfgPartConstrRecurLimit 1
        $rt::db readXRFFile
      rt::run_synthesis -module $rt::top
        rt::set_parameter maxInputIncreaseToMerge $oldMIITMVal
        rt::set_parameter createDfgPartConstrRecurLimit $oldCDPCRL
    }

    set rt::flowresult [ source $::env(SYNTH_COMMON)/flow.tcl ]
    rt::HARTNDb_stopJobStats
    rt::HARTNDb_reportJobStats "Synthesis Optimization Runtime"
    rt::HARTNDb_stopSystemStats
    if { $rt::flowresult == 1 } { return -code error }


  set hsKey [rt::get_parameter helper_shm_key] 
  if { $hsKey != "" && [info exists ::env(BUILTIN_SYNTH)] && [rt::get_parameter enableParallelHelperSpawn] } { 
     $rt::db killSynthHelper $hsKey
  } 
  rt::set_parameter helper_shm_key "" 
    if { [ info exists ::env(RT_TMP) ] } {
      if { [info exists ok_to_delete_rt_tmp] && $ok_to_delete_rt_tmp } { 
        file delete -force $::env(RT_TMP)
      }
    }

    source $::env(HRT_TCL_PATH)/rtSynthCleanup.tcl
  } ; #end uplevel
} rt::result]

if { $rt::rc } {
  $rt::db resetHdlParse
  set hsKey [rt::get_parameter helper_shm_key] 
  if { $hsKey != "" && [info exists ::env(BUILTIN_SYNTH)] && [rt::get_parameter enableParallelHelperSpawn] } { 
     $rt::db killSynthHelper $hsKey
  } 
  source $::env(HRT_TCL_PATH)/rtSynthCleanup.tcl
  return -code "error" $rt::result
}
